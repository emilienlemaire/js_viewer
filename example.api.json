{"version":"1.0.0","metadata":{"linker":"(unsigned)","siteRoot":""},"root":{"id":"root-OuaC6qVxtmyJFkS9aHFGG","name":"","type":"RootDoc","members":[{"id":"LTw0744KI7V2jOmQ3Fdbm","name":"Graph","brief":"<p>The graph class that is used to draw the graph.</p>","type":"ClassDoc","members":[{"id":"7x4LaBDXGRqpOWWovbqpo","name":"addGraphLibNode","brief":"<p>Adds a node that is contained in the original graph.</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"node","optional":false,"description":"<p>The name of the node to be added.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>The new node if it can be added</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1 | unknown"}}]},{"id":"Yx6CMP36xoZmjcmmvnJGE","name":"addSubsumedEdge","brief":"<p>Add a subsumed edge to the graph.</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"edge","optional":false,"description":"<p>A tuple containing the original graph edge and the edge data.</p>","dataType":{"tokens":[{"value":"[EdgeType, CubicleEdge]","kind":"canonical"},{"value":"EdgeType","kind":"canonical"},{"value":"CubicleEdge","kind":"canonical"}],"template":"[%1, %2]"}}],"returns":[{"description":"<p>The subsumed edge represented in our custom format.</p>","dataType":{"tokens":[{"value":"Edge","kind":"canonical"},{"value":"Edge","kind":"link"}],"template":"%1"}}]},{"id":"qhA_SHGMByynzWnfKaOST","name":"ancestors","brief":"<p>Get the ancestors of the node.</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"node","optional":false,"description":"<p>The node we want to have the ancestors of.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>An array of nodes that are ancestors of the node or an emptay array if the node\ndoes not have any ancestors.</p>","dataType":{"tokens":[{"value":"Array<Node>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1<%2>"}}]},{"id":"b3oehyDCUDoJOy4Th5kgc","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Creates a graph.</p>","params":[{"identifier":"root","optional":false,"description":"<p>The d3 representation of the graph.</p>","dataType":{"tokens":[{"value":"HierarchyPointNode<HierarchyGraph>","kind":"canonical"},{"value":"HierarchyPointNode","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1<%2>"}},{"identifier":"nodes","optional":false,"description":"<p>The graphlib reprensentation of the graph.</p>","dataType":{"tokens":[{"value":"GraphType","kind":"canonical"},{"value":"GraphType","kind":"canonical"}],"template":"%1"}},{"identifier":"edges","optional":false,"description":"<p>An array of edges in graphlib representation.</p>","dataType":{"tokens":[{"value":"Array<EdgeType>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"EdgeType","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[]},{"id":"wwuOQ4rZzaXsdEHJzx8lz","name":"getEdges","brief":"<p>Return an array of edges from the selectionState type format to the graph edge type</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"edges","optional":false,"description":"<p>The edeges we are looking to get back.</p>","dataType":{"tokens":[{"value":"Array<StoreEdge>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"StoreEdge","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>An array of edges or an empty array if no edge are in the graph.</p>","dataType":{"tokens":[{"value":"Array<Edge>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Edge","kind":"link"}],"template":"%1<%2>"}}]},{"id":"TEtfTwizYf6BTcdq15EbD","name":"node","brief":"<p>Look for the node named n in the graph.</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"n","optional":false,"description":"<p>The name of the node we are looking for.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>null if the node is not part of the graph, the node itself otherwise.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1 | unknown"}}]},{"id":"LLUZUH-KqepRzg_Wntjk5","name":"targetEdges","brief":"<p>Get the edges that targets the nodes.</p>","scope":"instance","type":"MethodDoc","params":[{"identifier":"nodes","optional":false,"description":"<p>The nodes we want the edges that target them.</p>","dataType":{"tokens":[{"value":"Array<Nodes>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Nodes","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>An array of edges or an empty array if none of the nodes in argument are\ntargeted by any edges.</p>","dataType":{"tokens":[{"value":"Array<Edge>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Edge","kind":"link"}],"template":"%1<%2>"}}]},{"id":"sFXwXZwOAxQmEPnvhQcjW","name":"_getAncestors","brief":"<p>Look for the ancestors of the node.</p>","access":"private","scope":"instance","type":"MethodDoc","params":[{"identifier":"node","optional":false,"description":"<p>The node we seek the parets of.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}},{"identifier":"parents","optional":false,"description":"<p>The parents we already know.</p>","dataType":{"tokens":[{"value":"Array<Node>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>An array of the ancestors of the node.</p>","dataType":{"tokens":[{"value":"Array<Node>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1<%2>"}}]},{"id":"Gyob-EKqQbbdn2yVhkg7A","name":"_toEdge","brief":"<p>Create a graph edge from basic edge type.</p>","access":"private","scope":"instance","type":"MethodDoc","params":[{"identifier":"edge","optional":false,"description":"<p>The edge to be transformed</p>","dataType":{"tokens":[{"value":"EdgeType","kind":"canonical"},{"value":"EdgeType","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The transformed edge.</p>","dataType":{"tokens":[{"value":"Edge","kind":"canonical"},{"value":"Edge","kind":"link"}],"template":"%1 | unknown"}}]},{"id":"fGnjeAnQ321-lu70mA1ee","name":"_toNode","brief":"<p>Create a graph node from a hierarchy node.</p>","access":"private","scope":"instance","type":"MethodDoc","params":[{"identifier":"node","optional":false,"description":"<p>The hierarchy node that needs to be transformed</p>","dataType":{"tokens":[{"value":"HierarchyPointNode<HierarchyGraph>","kind":"canonical"},{"value":"HierarchyPointNode","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>The transformed node.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}}]},{"id":"ZMHcKcsWzJP71a_6N5hCp","name":"_toSubsumedEdge","brief":"<p>Create a graph edge that is subsumed.</p>","access":"private","scope":"instance","type":"MethodDoc","params":[{"identifier":"edge","optional":false,"description":"<p>The basic edge to be transformed.</p>","dataType":{"tokens":[{"value":"EdgeType","kind":"canonical"},{"value":"EdgeType","kind":"canonical"}],"template":"%1"}},{"identifier":"data","optional":false,"description":"<p>The data of the edge to be transformed.</p>","dataType":{"tokens":[{"value":"CubcicleEdge","kind":"canonical"},{"value":"CubcicleEdge","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>A new graph edge that is subsuned, with all the data.</p>","dataType":{"tokens":[{"value":"Edge","kind":"canonical"},{"value":"Edge","kind":"link"}],"template":"%1"}}]}]},{"id":"NMyQ35JHa6MAWeaKMVpoO","name":"addOptionsInfo","brief":"<p>Add an option info object to the option state array.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The option state befoare we update it.</p>"}],"returns":[]},{"id":"tWz2_tFDZwF7mJd4JYsgM","name":"deleteOptionsInfo","brief":"","scope":"static","type":"MethodDoc","description":"<p>Delete an optionsInfo object from the global state.</p>","params":[{"identifier":"state","optional":false,"description":"<p>The global options state before the update.</p>"},{"identifier":"action","optional":false,"description":"<p>All the informations for the action to be performed,\nthe payload represents the index of the split where the options are s...","dataType":{"tokens":[{"value":"PayloadAction<number>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[]},{"id":"81-keAPdsZ3oqiKg67xHh","name":"hideContextMenu","brief":"","scope":"static","type":"MethodDoc","description":"<p>Tells the global state to hide the context menu.</p>","params":[{"identifier":"state","optional":false,"description":"<p>The state before we update it.</p>","dataType":{"tokens":[{"value":"ContextMenuState","kind":"canonical"},{"value":"ContextMenuState","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ReK0Z6aaaj3UcofAUYBKl","name":"resetOptionsInfo","brief":"<p>Resets all the options as an empty array.</p>","scope":"static","type":"MethodDoc","params":[],"returns":[{"description":"<p>An empty array of OptionsInfo.</p>","dataType":{"tokens":[{"value":"OptionsState","kind":"canonical"},{"value":"OptionsState","kind":"canonical"}],"template":"%1"}}]},{"id":"-BgKemVKvbR3N9a11noIS","name":"setEmptySelection","brief":"<p>Sets the selection to a null node.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The state before the update.</p>"}],"returns":[]},{"id":"wF560ZWwSXuQgtbk_f7bF","name":"setGraph","brief":"","scope":"static","type":"MethodDoc","description":"<p>Set the dot state with the string of the graph.</p>","params":[{"identifier":"state","optional":false,"description":"<p>The state before we update it.</p>","dataType":{"tokens":[{"value":"DotState","kind":"canonical"},{"value":"DotState","kind":"link"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>The informations of the action to perform.</p>","dataType":{"tokens":[{"value":"PayloadAction","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"}],"template":"%1<string>"}}],"returns":[]},{"id":"Fp-qfVH42BuJjCScIfq-v","name":"setGraph","brief":"","scope":"static","type":"MethodDoc","description":"<p>Sets the fraph info state</p>","params":[{"identifier":"action","optional":false,"description":"<p>All the informations for the action happening,\nthe playload is containing all our global graph information.</p>","dataType":{"tokens":[{"value":"PayloadAction<GraphInfo>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"GraphInfo","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>The new state after we set the payload to it.</p>","dataType":{"tokens":[{"value":"GraphState","kind":"canonical"},{"value":"GraphState","kind":"canonical"}],"template":"%1"}}]},{"id":"F_0Ws4GBWyLEn_aHINAty","name":"setHoveredNode","brief":"<p>Set the hovered node of a given split.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The option state befoare we update it.</p>"},{"identifier":"action","optional":false,"description":"<p>All the informations about the\naction. The payload is the index of the split where the options are set and the hovered nod...","dataType":{"tokens":[{"value":"PayloadAction<HoveredNodePayload>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"HoveredNodePayload","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"d9eewGicZ7iuu_n-1glPs","name":"setSelectedNode","brief":"<p>Sets the selected node and get its parents and the path to the root node.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The state before the update.</p>"},{"identifier":"action","optional":false,"description":"<p>All the informations of the action to perform,\nthe payload contains the selected node.</p>","dataType":{"tokens":[{"value":"PayloadAction<Node>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"vtor718ywFjIDofpCb4fE","name":"showContextMenu","brief":"","scope":"static","type":"MethodDoc","description":"<p>Tells the global state to show the context menu.</p>","params":[{"identifier":"state","optional":false,"description":"<p>The state before we update it.</p>","dataType":{"tokens":[{"value":"ContextMenuState","kind":"canonical"},{"value":"ContextMenuState","kind":"link"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>The informationso f the action to perform.</p>","dataType":{"tokens":[{"value":"PayloadAction<ShowPayload>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"ShowPayload","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"mWYyTDtlQ4BMdq4877cLe","name":"toggleAllNodes","brief":"<p>Toogles the show all nodes options on a given split.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The option state befoare we update it.</p>"},{"identifier":"action","optional":false,"description":"<p>All the informations about the action. the payload is the\nindex of the split where the options are set.</p>","dataType":{"tokens":[{"value":"PayloadAction<number>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[]},{"id":"v2ZyCNUw8S3m3AMnnNn1V","name":"toggleSubsumedNodes","brief":"<p>Toogles the show subsumed nodes options on a given split.</p>","scope":"static","type":"MethodDoc","params":[{"identifier":"state","optional":false,"description":"<p>The option state befoare we update it.</p>"},{"identifier":"action","optional":false,"description":"<p>All the informations about the action. the payload is the\nindex of the split where the options are set.</p>","dataType":{"tokens":[{"value":"PayloadAction<number>","kind":"canonical"},{"value":"PayloadAction","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}}],"returns":[]},{"id":"Qt4w1fxseF7lwWGBLfcE_","name":"App","brief":"<p>The global app component.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"}],"template":"%1<unknown>"}}]},{"id":"PkB8n9vYXvfG3KsTyZN9X","name":"checkIndex","brief":"<p>Check if the index given is good with the current state.</p>","type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The current option state.</p>","dataType":{"tokens":[{"value":"OptionsState","kind":"canonical"},{"value":"OptionsState","kind":"canonical"}],"template":"%1"}},{"identifier":"index","optional":false,"description":"<p>The index to be checked.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the index is good for our current option state.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"L4bVtagWzYemX7By6DthZ","name":"checkShowAllNodes","brief":"<p>Check if we show all nodes or not.</p>","type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The current option state.</p>","dataType":{"tokens":[{"value":"OptionsInfo","kind":"canonical"},{"value":"OptionsInfo","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if all nodes must be shown.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SiTR08I_B8sBHTMFDQaeg","name":"colorToHex","brief":"<p>Transforsm a string color to a hex color, defaulted to black if the string color is unknown.</p>","type":"FunctionDoc","params":[{"identifier":"color","optional":false,"description":"<p>The name of the color</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>The color in hax format, or black if the name is not handled by the switch\nstatement.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"lHNPO7-HRp_yt0kl02-qO","name":"ContextMenu","brief":"<p>The ContextMenu component, showed when the split is right clicked.</p>","type":"FunctionDoc","params":[{"identifier":"props","optional":false,"description":"<p>The props for this component.</p>","dataType":{"tokens":[{"value":"ContextMenuProps","kind":"canonical"},{"value":"ContextMenuProps","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The compenent according to the props.</p>","dataType":{"tokens":[{"value":"React.FunctionComponentElement<ContextMenuProps>","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"ContextMenuProps","kind":"link"}],"template":"%1<%2>"}}]},{"id":"8MtSTM-zNCO1NM87FwXYG","name":"ContextMenuProps","brief":"<p>ContextMenuProps.</p>","type":"InterfaceDoc","members":[{"id":"VJfQSo1qNviMyPVN_NvtB","name":"index","brief":"","type":"PropertyDoc"},{"id":"py2YQCx51QWsDWbu1ZC44","name":"x","brief":"","type":"PropertyDoc"},{"id":"qLq0JfHlbJ7lDV7DoaoWv","name":"y","brief":"","type":"PropertyDoc"}]},{"id":"HHhSZx3_acSCMLrgVJp8L","name":"contextMenuSelector","brief":"<p>Select the contextMenu state from the global state.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The global state.</p>","dataType":{"tokens":[{"value":"RootState","kind":"canonical"},{"value":"RootState","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The current context menu state.</p>","dataType":{"tokens":[{"value":"ContextMenuState","kind":"canonical"},{"value":"ContextMenuState","kind":"link"}],"template":"%1"}}]},{"id":"5drwXWehdGfxBClTqKPSU","name":"ContextMenuState","brief":"<p>ContextMenuState.</p>","type":"InterfaceDoc","members":[{"id":"hgPUqoIWdK1KzVEodpca8","name":"index","brief":"","type":"PropertyDoc"},{"id":"a9TZzc0hWnm6rRt140eiO","name":"x","brief":"","type":"PropertyDoc"},{"id":"guHohKv30nxvOP9gqkeaE","name":"y","brief":"","type":"PropertyDoc"}]},{"id":"EHnGmi3huuRDehdXQqwiD","name":"CrossIcon","brief":"<p>A custom cross (X) svg icon.</p>","type":"FunctionDoc","params":[{"identifier":"props","optional":false,"description":"<p>Common React SVG props.</p>","dataType":{"tokens":[{"value":"React.SVGProps","kind":"canonical"},{"value":"React.SVGProps","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement<SVGSVGElement>","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"SVGSVGElement","kind":"canonical"}],"template":"%1<%2>"}}]},{"id":"HG-ZKLkzSc7Y7-_ugtKhl","name":"displayNewGraph","brief":"<p>displayNewGraph.</p>","type":"FunctionDoc","params":[{"identifier":"graph","optional":false,"description":"<p>The graph to display</p>","dataType":{"tokens":[{"value":"Graph","kind":"canonical"},{"value":"Graph","kind":"link"}],"template":"%1"}},{"identifier":"pixiContext","optional":false,"description":"<p>The PIXIContext to display the graph on</p>","dataType":{"tokens":[{"value":"PIXIContext","kind":"canonical"},{"value":"PIXIContext","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"S646rmq3rw8dCWUW24cLd","name":"dotSelector","brief":"<p>Select the dot state from the gloabl state.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The global state</p>","dataType":{"tokens":[{"value":"RootState","kind":"canonical"},{"value":"RootState","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The current grph from the dot state.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"u5pY8jsyvSJGn4WzjQ7G0","name":"DotState","brief":"","type":"InterfaceDoc","description":"<p>/**\nDotState.</p>","members":[{"id":"xvyDyAAXAotqxjpAxdT_m","name":"graph","brief":"","type":"PropertyDoc"}]},{"id":"nAepuLfrple_Onz_S1D-8","name":"drawArrow","brief":"<p>drawArrow.</p>","type":"FunctionDoc","params":[{"identifier":"graphics","optional":false,"description":"<p>The graphics where the arrow will be drawn.</p>","dataType":{"tokens":[{"value":"Graphics","kind":"canonical"},{"value":"Graphics","kind":"canonical"}],"template":"%1"}},{"identifier":"source","optional":false,"description":"<p>The source node of the arrow, this contains the coordonates of the source node.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}},{"identifier":"target","optional":false,"description":"<p>The target node of the arrow, this contains the coordinates of the target node.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}},{"identifier":"label","optional":true,"description":"<p>The optional label of the arrow, if present, it will be drawn at the middle of\nthe arrow.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"jV8Sp4akavFxgS7XTWAhg","name":"drawHover","brief":"","type":"FunctionDoc","description":"<p>Draws the hovered node at a constant size, so that when we hover a node zoomed out, we can see\nwhat the node containes</p>","params":[{"identifier":"node","optional":false,"description":"<p>The node that is hovered.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>The stage where we want to draw the hovered node.</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>A new graphics instance with the hovered node drawn on it.</p>","dataType":{"tokens":[{"value":"Graphics","kind":"canonical"},{"value":"Graphics","kind":"canonical"}],"template":"%1"}}]},{"id":"4hyDWPP_B2Gj7DyOWPjnL","name":"drawNode","brief":"<p>drawNode.</p>","type":"FunctionDoc","params":[{"identifier":"graphics","optional":false,"description":"<p>The node specific graphcis element.</p>","dataType":{"tokens":[{"value":"Graphics","kind":"canonical"},{"value":"Graphics","kind":"canonical"}],"template":"%1"}},{"identifier":"bounds","optional":false,"description":"<p>The bounds of the node to be drawn.</p>","dataType":{"tokens":[{"value":"Rectanlge","kind":"canonical"},{"value":"Rectanlge","kind":"canonical"}],"template":"%1"}},{"identifier":"contourColor","optional":false,"description":"<p>The color of the contour of the node to be displayed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fillColor","optional":true,"default":"0xffffff","description":"<p>The background color of the node to be displayed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"n4Sx4wyAgm71LNeGc6YGm","name":"Dropzone","brief":"<p>The file selection compenent.</p>","type":"FunctionDoc","params":[{"identifier":"props","optional":false,"description":"<p>The props neede for this component</p>","dataType":{"tokens":[{"value":"DropzoneProps","kind":"canonical"},{"value":"DropzoneProps","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement<DropzoneProps>","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"DropzoneProps","kind":"link"}],"template":"%1<%2>"}}],"members":[{"id":"rwHRKq1NZPBFiTlE7O84V","name":"onCloseClick","brief":"<p>Hides the div when the modal is closed.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]},{"id":"9DUn2Lh93qS8TCCaszNWQ","name":"onSave","brief":"<p>Callback the &quot;save&quot; button.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]}]},{"id":"5LnDGjGJtgMJGnBK_9GDx","name":"DropzoneProps","brief":"<p>DropzoneProps.</p>","type":"InterfaceDoc","members":[{"id":"WKMX7GjwcXpxV1bBrODyN","name":"show","brief":"","type":"PropertyDoc"}]},{"id":"0Qng1_kG4GyE1fo6eub4f","name":"Edge","brief":"<p>Edge.</p>","type":"InterfaceDoc","members":[{"id":"SdMcvJWSPLXWfIVORdpx-","name":"arrowhead","brief":"","type":"PropertyDoc"},{"id":"Slw57TPnB-At_ZX5kjuCc","name":"candidate","brief":"","type":"PropertyDoc"},{"id":"0PGu-_MxgpqVlmRuAeNte","name":"color","brief":"","type":"PropertyDoc"},{"id":"ZfJsNsTXcbZINxeKho7XD","name":"constraint","brief":"","type":"PropertyDoc"},{"id":"2Saq9CYeOcv8f6Gukaa6e","name":"dir","brief":"","type":"PropertyDoc"},{"id":"QZdxHsHU9mO1UFnBU-Izo","name":"error","brief":"","type":"PropertyDoc"},{"id":"OuS-uDMT0UJ49DNx3nzVb","name":"fontcolor","brief":"","type":"PropertyDoc"},{"id":"_x6CbflqkjY-SYlH96l79","name":"fontname","brief":"","type":"PropertyDoc"},{"id":"jQoDtHBzIZ8nSmn3ZsBAj","name":"label","brief":"","type":"PropertyDoc"},{"id":"IfyF7uzIFwlHEG4ehupiM","name":"pencolor","brief":"","type":"PropertyDoc"},{"id":"If-TNer_hEyYu5YJHcv5K","name":"penwidth","brief":"","type":"PropertyDoc"},{"id":"iIr44ErkixQBbrmH_ix_v","name":"style","brief":"","type":"PropertyDoc"},{"id":"cKMDehzMtsjrTm81tXXDo","name":"subsume","brief":"","type":"PropertyDoc"}]},{"id":"vqD4jlztEvB6lhhxxvDBs","name":"Edge","brief":"<p>Edge.</p>","type":"InterfaceDoc","extends":["{CubicleEdge}"],"members":[{"id":"xzxuSUEduOgehouykl3pk","name":"source","brief":"","type":"PropertyDoc"},{"id":"y_Qf58h4xIYEiFGdm9aVI","name":"target","brief":"","type":"PropertyDoc"}]},{"id":"nkMFljM9Ra88wAdCOGe8w","name":"Edge","brief":"<p>Edge.</p>","type":"InterfaceDoc","members":[{"id":"DdQyYXm6ImPOFhWHazDod","name":"source","brief":"","type":"PropertyDoc"},{"id":"KvwXqVF-0IfYGjeEIdCnI","name":"target","brief":"","type":"PropertyDoc"}]},{"id":"3fabxifcv97Vcx6j39yVy","name":"getD3Hierachy","brief":"<p>Make a new hierarachy graph that is compatible to d3js/hierarchy.</p>","type":"FunctionDoc","params":[{"identifier":"graph","optional":false,"description":"<p>The original graph</p>","dataType":{"tokens":[{"value":"GraphType","kind":"canonical"},{"value":"GraphType","kind":"canonical"}],"template":"%1"}},{"identifier":"root","optional":false,"description":"<p>The root of the original graph.</p>","dataType":{"tokens":[{"value":"GraphType","kind":"canonical"},{"value":"GraphType","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>A new hierachical graph that is compatible with d3js.hierarchy algorithms.</p>","dataType":{"tokens":[{"value":"HierarchyGraph","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1"}}]},{"id":"fMHqrtKiav8zENyDi7G8I","name":"getGraphNoSubsumed","brief":"<p>This removes all subsumed nodes from a hierarchy graph.</p>","type":"FunctionDoc","params":[{"identifier":"graph","optional":false,"description":"<p>The graph to be modified.</p>","dataType":{"tokens":[{"value":"HierarchyGraph","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>A new hierarchy graph with no subsumed nodes.</p>","dataType":{"tokens":[{"value":"HierarchyGraph","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1"}}]},{"id":"CBQ9GNa0r8mLoDy-gMzXL","name":"Graph","brief":"<p>This component contains the graphslipts and manages their layout.</p>","type":"FunctionDoc","params":[],"returns":[{"description":"<p>The component to be displayed according to current\nstate</p>","dataType":{"tokens":[{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"}],"template":"%1<unknown>"}}],"members":[{"id":"c00koqSECT47HS7LIE8ms","name":"debounce","brief":"","readonly":true,"type":"FunctionDoc","description":"<p>This debounce a function according to the timing between 2 similar events. This allows\nto avoid calling to often an event ...","params":[{"identifier":"func","optional":false,"description":"<p>The function we wish to debounce.</p>","dataType":{"tokens":[{"value":"CallableFunction","kind":"canonical"},{"value":"CallableFunction","kind":"canonical"}],"template":"%1"}},{"identifier":"timer","optional":true,"default":"1000","description":"<p>The timeout befaore the function can be called again.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The debounced event handler.</p>","dataType":{"tokens":[{"value":"debouncedCallabck","kind":"canonical"},{"value":"debouncedCallabck","kind":"canonical"}],"template":"%1"}}]},{"id":"w_7tZ7gJjwqGeU_5s1-NO","name":"onClose","brief":"<p>Split close handler.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"index","optional":false,"description":"<p>The index of the closed split.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The event handle for the split of index index.</p>","dataType":{"tokens":[{"value":"onSplitCloseCallback","kind":"canonical"},{"value":"onSplitCloseCallback","kind":"canonical"}],"template":"%1"}}]},{"id":"xG0oS_v7BgFf3H58Qg7KW","name":"onResize","brief":"<p>On resize callback.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]}]},{"id":"L1qcT3BXwEl4x-hhTY0FH","name":"GraphInfo","brief":"<p>GraphInfo.</p>","type":"InterfaceDoc","members":[{"id":"u_L50xNlAhGCG89qmyHTz","name":"d3Tree","brief":"","type":"PropertyDoc"},{"id":"pCaFKHER4LwreqjOlwmGy","name":"graphLibGraph","brief":"","type":"PropertyDoc"},{"id":"QDq55vWtio9aJ9bRGel5M","name":"hierarchyGraph","brief":"","type":"PropertyDoc"},{"id":"LzQvHvHB8_xzxXoRanuMP","name":"subsumedEdges","brief":"","type":"PropertyDoc"}]},{"id":"8DYereVHGChHqVWCsPWGY","name":"GraphProps","brief":"<p>GraphProps.</p>","type":"InterfaceDoc","members":[{"id":"6pFh_FT2_BsUNjchz7eY2","name":"className","brief":"","type":"PropertyDoc"}]},{"id":"aV4JWLKgZWUrYm5XhKSYu","name":"graphSelector","brief":"<p>Selects the current graph state from the global current state.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The current global state.</p>","dataType":{"tokens":[{"value":"RootState","kind":"canonical"},{"value":"RootState","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The current global graph state.</p>","dataType":{"tokens":[{"value":"GraphState","kind":"canonical"},{"value":"GraphState","kind":"canonical"}],"template":"%1"}}]},{"id":"TEb94POywvJv3MEumJrb3","name":"GraphSplit","brief":"<p>The component containing a graph split. One is generated for each split one the screen.</p>","type":"FunctionDoc","params":[{"identifier":"props","optional":false,"description":"<p>The props for this component.</p>","dataType":{"tokens":[{"value":"GraphSplitProps","kind":"canonical"},{"value":"GraphSplitProps","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The component according to the props.</p>","dataType":{"tokens":[{"value":"React.FunctionComponentElement<GraphSplitProps>","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"GraphSplitProps","kind":"link"}],"template":"%1<%2>"}}]},{"id":"oKA_FArV13Z8F1xeph1MQ","name":"GraphSplitProps","brief":"<p>GraphSplitProps.</p>","type":"InterfaceDoc","members":[{"id":"GpZ-fCd1ODzsYvVOyAy7Q","name":"index","brief":"","type":"PropertyDoc"},{"id":"PK4RXFyNa7eI-chCxhgse","name":"onClose","brief":"","type":"PropertyDoc"},{"id":"0FuUulatUvPy3HjiSwdC9","name":"size","brief":"","type":"PropertyDoc"}]},{"id":"NbKN3bUWiVkV6DOgo4Pj_","name":"HierarchyGraph","brief":"<p>HierarchyGraph.</p>","type":"InterfaceDoc","description":"<p>This is a recursively defined graph.</p>","members":[{"id":"I8Z0x7o6P9v59SZ48ddyC","name":"children","brief":"","type":"PropertyDoc"},{"id":"jL1Ygf-IrPADxhhgKOaAG","name":"data","brief":"","type":"PropertyDoc"},{"id":"YCxj-SmkGMjnPchvUc0xY","name":"name","brief":"","type":"PropertyDoc"}]},{"id":"Pgo_8jpaTm6uUY3mZ4G-0","name":"HoveredNodePayload","brief":"<p>HoveredNodePayload.</p>","type":"InterfaceDoc","members":[{"id":"bBzYckpU2dmJf_tuuyCbD","name":"index","brief":"","type":"PropertyDoc"},{"id":"tfNAZBUnhHic2cXhWnxTS","name":"node","brief":"","type":"PropertyDoc"}]},{"id":"QTe9HYny2puW79rkYaO8R","name":"initGraph","brief":"","type":"FunctionDoc","description":"<p>Initializes the graph for PIXI to be able to display it and for the state to be able to manipulate\nit.</p>","params":[{"identifier":"graphviz","optional":false,"description":"<p>The graphviz string that describes the entire graph. Extracted from\na .dot file.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>A graph that the states can manipulate.</p>","dataType":{"tokens":[{"value":"GraphInfo","kind":"canonical"},{"value":"GraphInfo","kind":"link"}],"template":"%1"}}]},{"id":"M0dJkARVQoknvZA4EZl3s","name":"initNodeGraphics","brief":"<p>Initializes the grahics object for one node.</p>","type":"FunctionDoc","params":[{"identifier":"pixiContext","optional":false,"description":"<p>The {@link PIXIContext} for the node we want to draw.</p>","dataType":{"tokens":[{"value":"PIXIContext","kind":"canonical"},{"value":"PIXIContext","kind":"link"}],"template":"%1"}},{"identifier":"node","optional":false,"description":"<p>The node to be drawn.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}},{"identifier":"onClick","optional":false,"description":"<p>The click event handler for this node.</p>","dataType":{"tokens":[{"value":"nodeClickCallback","kind":"canonical"},{"value":"nodeClickCallback","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"fAmH5gYPV5d24G40iCput","name":"initPIXI","brief":"<p>Initializes all the needed objects for PIXI.js.</p>","type":"FunctionDoc","params":[{"identifier":"width","optional":false,"description":"<p>The width of the graph view (might be the entire window or just a split)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The height of the graph view.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onBackgroundClick","optional":false,"description":"<p>Event handler for background click.</p>","dataType":{"tokens":[{"value":"backgroundClickCallback","kind":"canonical"},{"value":"backgroundClickCallback","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The entire PIXIContext for a graph split: {@link PIXIContext}.</p>","dataType":{"tokens":[{"value":"PIXIContext","kind":"canonical"},{"value":"PIXIContext","kind":"link"}],"template":"%1"}}]},{"id":"lxcZIyMZkhhjDLCYLxT5e","name":"Main","brief":"<p>The Main component that conatians all our graph and menus.</p>","type":"FunctionDoc","params":[],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"}],"template":"%1<unknown>"}}]},{"id":"kEidiyTeRF6ANVBUG0DW4","name":"makeHierarchyGraph","brief":"<p>This generates recursively a hierarchy graph from the original graph</p>","type":"FunctionDoc","params":[{"identifier":"graph","optional":false,"description":"<p>The original graph we want to make hierachical.</p>","dataType":{"tokens":[{"value":"GraphType","kind":"canonical"},{"value":"GraphType","kind":"canonical"}],"template":"%1"}},{"identifier":"node","optional":false,"description":"<p>The current node we want to transofrm.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>A hierarchy graph from the original graph.</p>","dataType":{"tokens":[{"value":"HierarchyGraph","kind":"canonical"},{"value":"HierarchyGraph","kind":"link"}],"template":"%1"}}]},{"id":"uLGeDxge1d9Zz3nafZo83","name":"MenuProps","brief":"<p>MenuProps.</p>","type":"InterfaceDoc","members":[{"id":"E87gjgLpqDlPuGGyOPU-6","name":"className","brief":"","type":"PropertyDoc"}]},{"id":"YXjqIZC5bcRQYfEqdW2qD","name":"MoreVerticalIcon","brief":"<p>A custom More Vertical svg icon (three vertical dots)</p>","type":"FunctionDoc","params":[{"identifier":"props","optional":false,"description":"<p>Common Ract SVG props.</p>","dataType":{"tokens":[{"value":"React.SVGProps","kind":"canonical"},{"value":"React.SVGProps","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement<React.SVGProps<SVGSVGElement>React.SVGProps<SVGSVGElement>><React.SVGProps<SVGSVGElement>React.SVGProps<SVGSVGElement>>","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.SVGProps","kind":"canonical"},{"value":"SVGSVGElement","kind":"canonical"}],"template":"%1<%3<%2>>"}}]},{"id":"KPGTznnMwv8ixEb98rfXl","name":"Node","brief":"<p>Node.</p>","type":"InterfaceDoc","members":[{"id":"Y_eBO0CcP5nBYhkP4e_m3","name":"approx","brief":"","type":"PropertyDoc"},{"id":"kkyFMC0YSP-_Gyyre_Y7Z","name":"color","brief":"","type":"PropertyDoc"},{"id":"GjaGykqhqwsovNYH8OpBh","name":"error","brief":"","type":"PropertyDoc"},{"id":"8NccKm0bP7Dfu3oYOBDGd","name":"fillcolor","brief":"","type":"PropertyDoc"},{"id":"O2BMFSUKB1TDs6SOfjYum","name":"fontcolor","brief":"","type":"PropertyDoc"},{"id":"RmYGPc2dPeGFep34jQ2CV","name":"fontsize","brief":"","type":"PropertyDoc"},{"id":"kSCt6-6lOXwvr-5o46Ghh","name":"invariant","brief":"","type":"PropertyDoc"},{"id":"ASir63OoFLeCqn40LtNcE","name":"label","brief":"","type":"PropertyDoc"},{"id":"2Wp48SVL8-ia91OfK-d7u","name":"orig","brief":"","type":"PropertyDoc"},{"id":"fzN_lPpIOhFF4AfpptehT","name":"shape","brief":"","type":"PropertyDoc"},{"id":"7nA194wN-44cQrYol6MO7","name":"style","brief":"","type":"PropertyDoc"},{"id":"7zLQuxxYjHDjGDCWoMbN-","name":"subsumed","brief":"","type":"PropertyDoc"},{"id":"XAlcNensUzfiPVj4wjFq6","name":"unsafe","brief":"","type":"PropertyDoc"}]},{"id":"b3rcqr4k2_S9xsb9zzhKp","name":"Node","brief":"<p>Node.</p>","type":"InterfaceDoc","members":[{"id":"Zb4TCDDeIw8AYdBeNbNDi","name":"children","brief":"","type":"PropertyDoc"},{"id":"7dY1VVThNorFnBaAE-h4C","name":"color","brief":"","type":"PropertyDoc"},{"id":"YJHp4aIvMFA1P5RGd67C4","name":"gfx","brief":"","type":"PropertyDoc"},{"id":"eHdrI-gVH4e01NQmTy2Uo","name":"graph","brief":"","type":"PropertyDoc"},{"id":"A_ZmI7X18F3pJU0pwF1CH","name":"label","brief":"","type":"PropertyDoc"},{"id":"1UZuuA4Pv1_DJdhJTXpzD","name":"name","brief":"","type":"PropertyDoc"},{"id":"uqOy-V4pTj6GH2XkwYj-V","name":"target_y","brief":"","type":"PropertyDoc"},{"id":"sIMaEelBzkecS_YQhrkCs","name":"text","brief":"","type":"PropertyDoc"},{"id":"_jdSzLE_sd3GDoZULWE-X","name":"x","brief":"","type":"PropertyDoc"},{"id":"xN1pZa_dhlXRHdkZJV9SG","name":"y","brief":"","type":"PropertyDoc"}]},{"id":"T7NzsSpQmkNyCadZh_5QR","name":"onBackgroundClick","brief":"<p>This set the selection to an empty state.</p>","type":"FunctionDoc","params":[],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"rUqAtUCc6JWrKvEUDb1P_","name":"onHover","brief":"<p>This set the hovered state to the node passed in argument.</p>","type":"FunctionDoc","params":[{"identifier":"index","optional":false,"description":"<p>The index of the graph split where the node is overed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>A function which takes a node in argument and sets it as the hovered state.</p>","dataType":{"tokens":[{"value":"onHover~hover","kind":"canonical"},{"value":"onHover~hover","kind":"canonical"}],"template":"%1"}}],"members":[{"id":"NjLZrMXaUFuV9I6dEcyC7","name":"hover","brief":"<p>Set the hover state to the hovered node.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"node","optional":false,"description":"<p>The node being hovered.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}}],"returns":[]}]},{"id":"PrmHwdhw9bmcx0dCzfBex","name":"onNodeClick","brief":"","type":"FunctionDoc","description":"<p>This either set the selection state to the node or empty it if the node is the same\nas the current selected node.</p>","params":[{"identifier":"node","optional":false,"description":"<p>The node that the user jsut clicked.</p>","dataType":{"tokens":[{"value":"Node","kind":"canonical"},{"value":"Node","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"void","kind":"canonical"}],"template":"void"}}]},{"id":"tGQvwmN6TqfNwB62jNcrY","name":"onOut","brief":"<p>Handles the &quot;mouseout&quot; event, sets the hovered state to null.</p>","type":"FunctionDoc","params":[{"identifier":"index","optional":false,"description":"<p>The index of the graph split where the node is hovered.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<ul>\n<li>The event handler function for the index graph split.</li>\n</ul>","dataType":{"tokens":[{"value":"onOutCallback","kind":"canonical"},{"value":"onOutCallback","kind":"canonical"}],"template":"%1"}}]},{"id":"4-4sUEsaTsOgKZLOyevsQ","name":"onTicked","brief":"<p>This function is called at every tick of the PIXI timer that owns it.</p>","type":"FunctionDoc","params":[{"identifier":"renderer","optional":false,"description":"<p>The renderer that draws everything.</p>","dataType":{"tokens":[{"value":"AbstractRenderer","kind":"canonical"},{"value":"AbstractRenderer","kind":"canonical"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>The stage that must be drawn at each tick.</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The rendering function for the renderer and the stage.</p>","dataType":{"tokens":[{"value":"onTickedCallback","kind":"canonical"},{"value":"onTickedCallback","kind":"canonical"}],"template":"%1"}}]},{"id":"Nzo9Xgfgdn3mKIarKiktP","name":"OptionalGraph","brief":"","readonly":true,"type":"FunctionDoc","description":"<p>Optional graph components, which invites to select a graph or displays it if\nwe have one already.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"}],"template":"%1<unknown>"}}]},{"id":"e3aXe_fWlZIyL1yNToivD","name":"OptionsInfo","brief":"<p>OptionsInfo.</p>","type":"InterfaceDoc","members":[{"id":"TrFS7aLerWzNlUOpb5lP5","name":"hoveredNode","brief":"","type":"PropertyDoc"},{"id":"maPCLnlk1dEVD6pyTMmqH","name":"showAllNodes","brief":"","type":"PropertyDoc"},{"id":"tfhUbePJssOnjlTmveRav","name":"showApproxNodes","brief":"","type":"PropertyDoc"},{"id":"-ttLaLez3UCgJeaviyJ4Z","name":"showErrorNodes","brief":"","type":"PropertyDoc"},{"id":"5maOiXfqVsSpKvrbbV3TJ","name":"showInvariantNodes","brief":"","type":"PropertyDoc"},{"id":"2F_4aI7ROnF_ieKZVMNrM","name":"showSubsumedNodes","brief":"","type":"PropertyDoc"},{"id":"EsATa87LrgZM0rEBpfwgs","name":"showUnsafeNodes","brief":"","type":"PropertyDoc"}]},{"id":"H_p9m76Xr-6J34_P_uGnR","name":"optionsSelector","brief":"<p>Selects the options state from the current global state.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The current global state.</p>","dataType":{"tokens":[{"value":"RootState","kind":"canonical"},{"value":"RootState","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The current option state.</p>","dataType":{"tokens":[{"value":"OptionsState","kind":"canonical"},{"value":"OptionsState","kind":"canonical"}],"template":"%1"}}]},{"id":"deZSEvLmtmhBftYTdYKDE","name":"PIXIContext","brief":"<p>PIXIContext.</p>","type":"InterfaceDoc","members":[{"id":"EAtfTlbR6t-MCpzKH0hEN","name":"links","brief":"","type":"PropertyDoc"},{"id":"80wHBFNY9GbYpiQ9myLYv","name":"renderer","brief":"","type":"PropertyDoc"},{"id":"H8iRguEMM8nwyXzhJ2soG","name":"stage","brief":"","type":"PropertyDoc"},{"id":"xRxMb3vNYYq9_DNMEMr3V","name":"superStage","brief":"","type":"PropertyDoc"},{"id":"jkY9pYT7UxZ2MVIlozpxy","name":"ticker","brief":"","type":"PropertyDoc"}]},{"id":"uPEjjZ5wRQNOn7ybqhf_n","name":"Position","brief":"<p>Position.</p>","type":"InterfaceDoc","members":[{"id":"wjxFgPbkw5bGoWhOSKDHC","name":"x","brief":"","type":"PropertyDoc"},{"id":"eoN2hM7LhAAReaR0cC7pm","name":"y","brief":"","type":"PropertyDoc"}]},{"id":"RY9zkglAfiviJd0jsMzWH","name":"selectionSelector","brief":"<p>Selects the current selection state from the global state.</p>","readonly":true,"type":"FunctionDoc","params":[{"identifier":"state","optional":false,"description":"<p>The current global state.</p>","dataType":{"tokens":[{"value":"RootState","kind":"canonical"},{"value":"RootState","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The current selection state.</p>","dataType":{"tokens":[{"value":"SelectionState","kind":"canonical"},{"value":"SelectionState","kind":"link"}],"template":"%1"}}]},{"id":"cUfZ53_6zRIBeXvpilphA","name":"SelectionState","brief":"<p>SelectionState.</p>","type":"InterfaceDoc","members":[{"id":"-Ymvwv_lzzeDcbx1I97wB","name":"node","brief":"","type":"PropertyDoc"},{"id":"f4bve2MS4ePCzL9Dvx0bU","name":"oldNode","brief":"","type":"PropertyDoc"},{"id":"tbYLvRQztlCKAY0oLFyji","name":"oldParents","brief":"","type":"PropertyDoc"},{"id":"r7ZZtVG0Oz8LmrLLkY_Wx","name":"parents","brief":"","type":"PropertyDoc"},{"id":"EFC3hj93zmocZml-Vje5h","name":"path","brief":"","type":"PropertyDoc"}]},{"id":"iIs7PIQDxUNfhTznL6XrC","name":"ShowPayload","brief":"<p>Payload containing all the informations neede to show the context menu</p>","type":"InterfaceDoc","members":[{"id":"XjwICCwgYThAflb7amwdo","name":"index","brief":"","type":"PropertyDoc"},{"id":"P_AejSIyqZpfLpJZXYfpR","name":"x","brief":"","type":"PropertyDoc"},{"id":"cVAUU4lvGhrI302ma18A8","name":"y","brief":"","type":"PropertyDoc"}]},{"id":"pRNdb7hTUz5iZZQxzA7n-","name":"Size","brief":"<p>Size.</p>","type":"InterfaceDoc","members":[{"id":"94Z6K-Rqt7uLFAk3SRN6c","name":"height","brief":"","type":"PropertyDoc"},{"id":"dLw65bjfOYVq0kn3MCu0n","name":"width","brief":"","type":"PropertyDoc"}]},{"id":"c_Z85Tp4ii5xomsUgNP0E","name":"TopAppBar","brief":"<p>The React component for the App Bar.</p>","type":"FunctionDoc","params":[],"returns":[{"description":"<p>The top app bar functionnal component.</p>","dataType":{"tokens":[{"value":"React.FunctionComponentElement","kind":"canonical"},{"value":"React.FunctionComponentElement","kind":"canonical"}],"template":"%1<unknown>"}}],"members":[{"id":"pS4UmR3btvmla8Wq_j54O","name":"onAddSplitClick","brief":"<p>Handler for the &quot;Add graph split&quot; button of the menu.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]},{"id":"nEnWzYMl8YAs0nFITwgfV","name":"onClick","brief":"<p>Handler for the dropdown menu click.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]},{"id":"rQZDwYGvzh3MsNuNmNLn_","name":"onSelectClick","brief":"<p>Handler for the &quot;Select file&quot; button of the menu.</p>","readonly":true,"type":"FunctionDoc","params":[],"returns":[]}]},{"id":"QJ9O9rxL9bUEMJ79Mbj5O","name":"useD3","brief":"<p>Custom hook to use d3 in a component.</p>","type":"FunctionDoc","params":[{"identifier":"renderGraphFn","optional":false,"description":"<p>Function called on the ref containing the graph.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"dependencies","optional":false,"description":"<p>Dependencies that triggers this hook.</p>","dataType":{"tokens":[{"value":"React.DependencyList","kind":"canonical"},{"value":"React.DependencyList","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>The ref with all the d3 modifications applied to it.</p>","dataType":{"tokens":[{"value":"React.RefObject<HTMLDivElement>","kind":"canonical"},{"value":"React.RefObject","kind":"canonical"},{"value":"HTMLDivElement","kind":"canonical"}],"template":"%1<%2>"}}]},{"id":"qvxuj6gTIEglf4X0M5ecw","name":"ZoomInfo","brief":"<p>ZoomInfo.</p>","type":"InterfaceDoc","members":[{"id":"344F-hb5epxrH5aOGwjsp","name":"k","brief":"","type":"PropertyDoc"},{"id":"HwDbP6UaeMjoxw97t-kd6","name":"x","brief":"","type":"PropertyDoc"},{"id":"uDsSkgywZv9YEI_LpboYz","name":"y","brief":"","type":"PropertyDoc"}]}]},"registry":{"pkg-vxX5jl0yvDoalpGUdZ78Y":{"uri":"/js_viewer.html"},"LTw0744KI7V2jOmQ3Fdbm":{"uri":"/js_viewer/Graph.html"},"7x4LaBDXGRqpOWWovbqpo":{"uri":"/js_viewer/Graph.html#addGraphLibNode"},"Yx6CMP36xoZmjcmmvnJGE":{"uri":"/js_viewer/Graph.html#addSubsumedEdge"},"qhA_SHGMByynzWnfKaOST":{"uri":"/js_viewer/Graph.html#ancestors"},"b3oehyDCUDoJOy4Th5kgc":{"uri":"/js_viewer/Graph.html#constructor"},"wwuOQ4rZzaXsdEHJzx8lz":{"uri":"/js_viewer/Graph.html#getEdges"},"TEtfTwizYf6BTcdq15EbD":{"uri":"/js_viewer/Graph.html#node"},"LLUZUH-KqepRzg_Wntjk5":{"uri":"/js_viewer/Graph.html#targetEdges"},"sFXwXZwOAxQmEPnvhQcjW":{"uri":"/js_viewer/Graph.html#_getAncestors"},"Gyob-EKqQbbdn2yVhkg7A":{"uri":"/js_viewer/Graph.html#_toEdge"},"fGnjeAnQ321-lu70mA1ee":{"uri":"/js_viewer/Graph.html#_toNode"},"ZMHcKcsWzJP71a_6N5hCp":{"uri":"/js_viewer/Graph.html#_toSubsumedEdge"},"NMyQ35JHa6MAWeaKMVpoO":{"uri":"global.html#addOptionsInfo"},"tWz2_tFDZwF7mJd4JYsgM":{"uri":"global.html#deleteOptionsInfo"},"81-keAPdsZ3oqiKg67xHh":{"uri":"global.html#hideContextMenu"},"ReK0Z6aaaj3UcofAUYBKl":{"uri":"global.html#resetOptionsInfo"},"-BgKemVKvbR3N9a11noIS":{"uri":"global.html#setEmptySelection"},"wF560ZWwSXuQgtbk_f7bF":{"uri":"global.html#setGraph"},"Fp-qfVH42BuJjCScIfq-v":{"uri":"global.html#setGraph_"},"F_0Ws4GBWyLEn_aHINAty":{"uri":"global.html#setHoveredNode"},"d9eewGicZ7iuu_n-1glPs":{"uri":"global.html#setSelectedNode"},"vtor718ywFjIDofpCb4fE":{"uri":"global.html#showContextMenu"},"mWYyTDtlQ4BMdq4877cLe":{"uri":"global.html#toggleAllNodes"},"v2ZyCNUw8S3m3AMnnNn1V":{"uri":"global.html#toggleSubsumedNodes"},"Qt4w1fxseF7lwWGBLfcE_":{"uri":"/js_viewer/App.html"},"PkB8n9vYXvfG3KsTyZN9X":{"uri":"/js_viewer/checkIndex.html"},"L4bVtagWzYemX7By6DthZ":{"uri":"/js_viewer/checkShowAllNodes.html"},"SiTR08I_B8sBHTMFDQaeg":{"uri":"/js_viewer/colorToHex.html"},"lHNPO7-HRp_yt0kl02-qO":{"uri":"/js_viewer/ContextMenu.html"},"8MtSTM-zNCO1NM87FwXYG":{"uri":"/js_viewer/ContextMenuProps.html"},"VJfQSo1qNviMyPVN_NvtB":{"uri":"/js_viewer/ContextMenuProps.html#index"},"py2YQCx51QWsDWbu1ZC44":{"uri":"/js_viewer/ContextMenuProps.html#x"},"qLq0JfHlbJ7lDV7DoaoWv":{"uri":"/js_viewer/ContextMenuProps.html#y"},"HHhSZx3_acSCMLrgVJp8L":{"uri":"/js_viewer/contextMenuSelector.html"},"5drwXWehdGfxBClTqKPSU":{"uri":"/js_viewer/ContextMenuState.html"},"hgPUqoIWdK1KzVEodpca8":{"uri":"/js_viewer/ContextMenuState.html#index"},"a9TZzc0hWnm6rRt140eiO":{"uri":"/js_viewer/ContextMenuState.html#x"},"guHohKv30nxvOP9gqkeaE":{"uri":"/js_viewer/ContextMenuState.html#y"},"EHnGmi3huuRDehdXQqwiD":{"uri":"/js_viewer/CrossIcon.html"},"HG-ZKLkzSc7Y7-_ugtKhl":{"uri":"/js_viewer/displayNewGraph.html"},"S646rmq3rw8dCWUW24cLd":{"uri":"/js_viewer/dotSelector.html"},"u5pY8jsyvSJGn4WzjQ7G0":{"uri":"/js_viewer/DotState.html"},"xvyDyAAXAotqxjpAxdT_m":{"uri":"/js_viewer/DotState.html#graph"},"nAepuLfrple_Onz_S1D-8":{"uri":"/js_viewer/drawArrow.html"},"jV8Sp4akavFxgS7XTWAhg":{"uri":"/js_viewer/drawHover.html"},"4hyDWPP_B2Gj7DyOWPjnL":{"uri":"/js_viewer/drawNode.html"},"n4Sx4wyAgm71LNeGc6YGm":{"uri":"/js_viewer/Dropzone.html"},"rwHRKq1NZPBFiTlE7O84V":{"uri":"/js_viewer/Dropzone/onCloseClick.html"},"9DUn2Lh93qS8TCCaszNWQ":{"uri":"/js_viewer/Dropzone/onSave.html"},"5LnDGjGJtgMJGnBK_9GDx":{"uri":"/js_viewer/DropzoneProps.html"},"WKMX7GjwcXpxV1bBrODyN":{"uri":"/js_viewer/DropzoneProps.html#show"},"0Qng1_kG4GyE1fo6eub4f":{"uri":"/js_viewer/Edge.html"},"SdMcvJWSPLXWfIVORdpx-":{"uri":"/js_viewer/Edge.html#arrowhead"},"Slw57TPnB-At_ZX5kjuCc":{"uri":"/js_viewer/Edge.html#candidate"},"0PGu-_MxgpqVlmRuAeNte":{"uri":"/js_viewer/Edge.html#color"},"ZfJsNsTXcbZINxeKho7XD":{"uri":"/js_viewer/Edge.html#constraint"},"2Saq9CYeOcv8f6Gukaa6e":{"uri":"/js_viewer/Edge.html#dir"},"QZdxHsHU9mO1UFnBU-Izo":{"uri":"/js_viewer/Edge.html#error"},"OuS-uDMT0UJ49DNx3nzVb":{"uri":"/js_viewer/Edge.html#fontcolor"},"_x6CbflqkjY-SYlH96l79":{"uri":"/js_viewer/Edge.html#fontname"},"jQoDtHBzIZ8nSmn3ZsBAj":{"uri":"/js_viewer/Edge.html#label"},"IfyF7uzIFwlHEG4ehupiM":{"uri":"/js_viewer/Edge.html#pencolor"},"If-TNer_hEyYu5YJHcv5K":{"uri":"/js_viewer/Edge.html#penwidth"},"iIr44ErkixQBbrmH_ix_v":{"uri":"/js_viewer/Edge.html#style"},"cKMDehzMtsjrTm81tXXDo":{"uri":"/js_viewer/Edge.html#subsume"},"vqD4jlztEvB6lhhxxvDBs":{"uri":"/js_viewer/Edge.html"},"xzxuSUEduOgehouykl3pk":{"uri":"/js_viewer/Edge.html#source"},"y_Qf58h4xIYEiFGdm9aVI":{"uri":"/js_viewer/Edge.html#target"},"nkMFljM9Ra88wAdCOGe8w":{"uri":"/js_viewer/Edge.html"},"DdQyYXm6ImPOFhWHazDod":{"uri":"/js_viewer/Edge.html#source"},"KvwXqVF-0IfYGjeEIdCnI":{"uri":"/js_viewer/Edge.html#target"},"3fabxifcv97Vcx6j39yVy":{"uri":"/js_viewer/getD3Hierachy.html"},"fMHqrtKiav8zENyDi7G8I":{"uri":"/js_viewer/getGraphNoSubsumed.html"},"CBQ9GNa0r8mLoDy-gMzXL":{"uri":"/js_viewer/Graph.html"},"c00koqSECT47HS7LIE8ms":{"uri":"/js_viewer/Graph/debounce.html"},"w_7tZ7gJjwqGeU_5s1-NO":{"uri":"/js_viewer/Graph/onClose.html"},"xG0oS_v7BgFf3H58Qg7KW":{"uri":"/js_viewer/Graph/onResize.html"},"L1qcT3BXwEl4x-hhTY0FH":{"uri":"/js_viewer/GraphInfo.html"},"u_L50xNlAhGCG89qmyHTz":{"uri":"/js_viewer/GraphInfo.html#d3Tree"},"pCaFKHER4LwreqjOlwmGy":{"uri":"/js_viewer/GraphInfo.html#graphLibGraph"},"QDq55vWtio9aJ9bRGel5M":{"uri":"/js_viewer/GraphInfo.html#hierarchyGraph"},"LzQvHvHB8_xzxXoRanuMP":{"uri":"/js_viewer/GraphInfo.html#subsumedEdges"},"8DYereVHGChHqVWCsPWGY":{"uri":"/js_viewer/GraphProps.html"},"6pFh_FT2_BsUNjchz7eY2":{"uri":"/js_viewer/GraphProps.html#className"},"aV4JWLKgZWUrYm5XhKSYu":{"uri":"/js_viewer/graphSelector.html"},"TEb94POywvJv3MEumJrb3":{"uri":"/js_viewer/GraphSplit.html"},"oKA_FArV13Z8F1xeph1MQ":{"uri":"/js_viewer/GraphSplitProps.html"},"GpZ-fCd1ODzsYvVOyAy7Q":{"uri":"/js_viewer/GraphSplitProps.html#index"},"PK4RXFyNa7eI-chCxhgse":{"uri":"/js_viewer/GraphSplitProps.html#onClose"},"0FuUulatUvPy3HjiSwdC9":{"uri":"/js_viewer/GraphSplitProps.html#size"},"NbKN3bUWiVkV6DOgo4Pj_":{"uri":"/js_viewer/HierarchyGraph.html"},"I8Z0x7o6P9v59SZ48ddyC":{"uri":"/js_viewer/HierarchyGraph.html#children"},"jL1Ygf-IrPADxhhgKOaAG":{"uri":"/js_viewer/HierarchyGraph.html#data"},"YCxj-SmkGMjnPchvUc0xY":{"uri":"/js_viewer/HierarchyGraph.html#name"},"Pgo_8jpaTm6uUY3mZ4G-0":{"uri":"/js_viewer/HoveredNodePayload.html"},"bBzYckpU2dmJf_tuuyCbD":{"uri":"/js_viewer/HoveredNodePayload.html#index"},"tfNAZBUnhHic2cXhWnxTS":{"uri":"/js_viewer/HoveredNodePayload.html#node"},"QTe9HYny2puW79rkYaO8R":{"uri":"/js_viewer/initGraph.html"},"M0dJkARVQoknvZA4EZl3s":{"uri":"/js_viewer/initNodeGraphics.html"},"fAmH5gYPV5d24G40iCput":{"uri":"/js_viewer/initPIXI.html"},"lxcZIyMZkhhjDLCYLxT5e":{"uri":"/js_viewer/Main.html"},"kEidiyTeRF6ANVBUG0DW4":{"uri":"/js_viewer/makeHierarchyGraph.html"},"uLGeDxge1d9Zz3nafZo83":{"uri":"/js_viewer/MenuProps.html"},"E87gjgLpqDlPuGGyOPU-6":{"uri":"/js_viewer/MenuProps.html#className"},"YXjqIZC5bcRQYfEqdW2qD":{"uri":"/js_viewer/MoreVerticalIcon.html"},"KPGTznnMwv8ixEb98rfXl":{"uri":"/js_viewer/Node.html"},"Y_eBO0CcP5nBYhkP4e_m3":{"uri":"/js_viewer/Node.html#approx"},"kkyFMC0YSP-_Gyyre_Y7Z":{"uri":"/js_viewer/Node.html#color"},"GjaGykqhqwsovNYH8OpBh":{"uri":"/js_viewer/Node.html#error"},"8NccKm0bP7Dfu3oYOBDGd":{"uri":"/js_viewer/Node.html#fillcolor"},"O2BMFSUKB1TDs6SOfjYum":{"uri":"/js_viewer/Node.html#fontcolor"},"RmYGPc2dPeGFep34jQ2CV":{"uri":"/js_viewer/Node.html#fontsize"},"kSCt6-6lOXwvr-5o46Ghh":{"uri":"/js_viewer/Node.html#invariant"},"ASir63OoFLeCqn40LtNcE":{"uri":"/js_viewer/Node.html#label"},"2Wp48SVL8-ia91OfK-d7u":{"uri":"/js_viewer/Node.html#orig"},"fzN_lPpIOhFF4AfpptehT":{"uri":"/js_viewer/Node.html#shape"},"7nA194wN-44cQrYol6MO7":{"uri":"/js_viewer/Node.html#style"},"7zLQuxxYjHDjGDCWoMbN-":{"uri":"/js_viewer/Node.html#subsumed"},"XAlcNensUzfiPVj4wjFq6":{"uri":"/js_viewer/Node.html#unsafe"},"b3rcqr4k2_S9xsb9zzhKp":{"uri":"/js_viewer/Node.html"},"Zb4TCDDeIw8AYdBeNbNDi":{"uri":"/js_viewer/Node.html#children"},"7dY1VVThNorFnBaAE-h4C":{"uri":"/js_viewer/Node.html#color"},"YJHp4aIvMFA1P5RGd67C4":{"uri":"/js_viewer/Node.html#gfx"},"eHdrI-gVH4e01NQmTy2Uo":{"uri":"/js_viewer/Node.html#graph"},"A_ZmI7X18F3pJU0pwF1CH":{"uri":"/js_viewer/Node.html#label"},"1UZuuA4Pv1_DJdhJTXpzD":{"uri":"/js_viewer/Node.html#name"},"uqOy-V4pTj6GH2XkwYj-V":{"uri":"/js_viewer/Node.html#target_y"},"sIMaEelBzkecS_YQhrkCs":{"uri":"/js_viewer/Node.html#text"},"_jdSzLE_sd3GDoZULWE-X":{"uri":"/js_viewer/Node.html#x"},"xN1pZa_dhlXRHdkZJV9SG":{"uri":"/js_viewer/Node.html#y"},"T7NzsSpQmkNyCadZh_5QR":{"uri":"/js_viewer/onBackgroundClick.html"},"rUqAtUCc6JWrKvEUDb1P_":{"uri":"/js_viewer/onHover.html"},"NjLZrMXaUFuV9I6dEcyC7":{"uri":"/js_viewer/onHover/hover.html"},"PrmHwdhw9bmcx0dCzfBex":{"uri":"/js_viewer/onNodeClick.html"},"tGQvwmN6TqfNwB62jNcrY":{"uri":"/js_viewer/onOut.html"},"4-4sUEsaTsOgKZLOyevsQ":{"uri":"/js_viewer/onTicked.html"},"Nzo9Xgfgdn3mKIarKiktP":{"uri":"/js_viewer/OptionalGraph.html"},"e3aXe_fWlZIyL1yNToivD":{"uri":"/js_viewer/OptionsInfo.html"},"TrFS7aLerWzNlUOpb5lP5":{"uri":"/js_viewer/OptionsInfo.html#hoveredNode"},"maPCLnlk1dEVD6pyTMmqH":{"uri":"/js_viewer/OptionsInfo.html#showAllNodes"},"tfhUbePJssOnjlTmveRav":{"uri":"/js_viewer/OptionsInfo.html#showApproxNodes"},"-ttLaLez3UCgJeaviyJ4Z":{"uri":"/js_viewer/OptionsInfo.html#showErrorNodes"},"5maOiXfqVsSpKvrbbV3TJ":{"uri":"/js_viewer/OptionsInfo.html#showInvariantNodes"},"2F_4aI7ROnF_ieKZVMNrM":{"uri":"/js_viewer/OptionsInfo.html#showSubsumedNodes"},"EsATa87LrgZM0rEBpfwgs":{"uri":"/js_viewer/OptionsInfo.html#showUnsafeNodes"},"H_p9m76Xr-6J34_P_uGnR":{"uri":"/js_viewer/optionsSelector.html"},"deZSEvLmtmhBftYTdYKDE":{"uri":"/js_viewer/PIXIContext.html"},"EAtfTlbR6t-MCpzKH0hEN":{"uri":"/js_viewer/PIXIContext.html#links"},"80wHBFNY9GbYpiQ9myLYv":{"uri":"/js_viewer/PIXIContext.html#renderer"},"H8iRguEMM8nwyXzhJ2soG":{"uri":"/js_viewer/PIXIContext.html#stage"},"xRxMb3vNYYq9_DNMEMr3V":{"uri":"/js_viewer/PIXIContext.html#superStage"},"jkY9pYT7UxZ2MVIlozpxy":{"uri":"/js_viewer/PIXIContext.html#ticker"},"uPEjjZ5wRQNOn7ybqhf_n":{"uri":"/js_viewer/Position.html"},"wjxFgPbkw5bGoWhOSKDHC":{"uri":"/js_viewer/Position.html#x"},"eoN2hM7LhAAReaR0cC7pm":{"uri":"/js_viewer/Position.html#y"},"RY9zkglAfiviJd0jsMzWH":{"uri":"/js_viewer/selectionSelector.html"},"cUfZ53_6zRIBeXvpilphA":{"uri":"/js_viewer/SelectionState.html"},"-Ymvwv_lzzeDcbx1I97wB":{"uri":"/js_viewer/SelectionState.html#node"},"f4bve2MS4ePCzL9Dvx0bU":{"uri":"/js_viewer/SelectionState.html#oldNode"},"tbYLvRQztlCKAY0oLFyji":{"uri":"/js_viewer/SelectionState.html#oldParents"},"r7ZZtVG0Oz8LmrLLkY_Wx":{"uri":"/js_viewer/SelectionState.html#parents"},"EFC3hj93zmocZml-Vje5h":{"uri":"/js_viewer/SelectionState.html#path"},"iIs7PIQDxUNfhTznL6XrC":{"uri":"/js_viewer/ShowPayload.html"},"XjwICCwgYThAflb7amwdo":{"uri":"/js_viewer/ShowPayload.html#index"},"P_AejSIyqZpfLpJZXYfpR":{"uri":"/js_viewer/ShowPayload.html#x"},"cVAUU4lvGhrI302ma18A8":{"uri":"/js_viewer/ShowPayload.html#y"},"pRNdb7hTUz5iZZQxzA7n-":{"uri":"/js_viewer/Size.html"},"94Z6K-Rqt7uLFAk3SRN6c":{"uri":"/js_viewer/Size.html#height"},"dLw65bjfOYVq0kn3MCu0n":{"uri":"/js_viewer/Size.html#width"},"c_Z85Tp4ii5xomsUgNP0E":{"uri":"/js_viewer/TopAppBar.html"},"pS4UmR3btvmla8Wq_j54O":{"uri":"/js_viewer/TopAppBar/onAddSplitClick.html"},"nEnWzYMl8YAs0nFITwgfV":{"uri":"/js_viewer/TopAppBar/onClick.html"},"rQZDwYGvzh3MsNuNmNLn_":{"uri":"/js_viewer/TopAppBar/onSelectClick.html"},"QJ9O9rxL9bUEMJ79Mbj5O":{"uri":"/js_viewer/useD3.html"},"qvxuj6gTIEglf4X0M5ecw":{"uri":"/js_viewer/ZoomInfo.html"},"344F-hb5epxrH5aOGwjsp":{"uri":"/js_viewer/ZoomInfo.html#k"},"HwDbP6UaeMjoxw97t-kd6":{"uri":"/js_viewer/ZoomInfo.html#x"},"uDsSkgywZv9YEI_LpboYz":{"uri":"/js_viewer/ZoomInfo.html#y"}}}