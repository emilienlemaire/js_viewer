<!DOCTYPE html>
<html lang="en">
<head>
    
    <meta charset="utf-8">
    <title>Graph - Documentation</title>
    
    
    <script src="scripts/prettify/prettify.js"></script>
    <script src="scripts/prettify/lang-css.js"></script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc.css">
    <script src="scripts/nav.js" defer></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger" class="navicon-button x">
  <div class="navicon"></div>
</label>

<label for="nav-trigger" class="overlay"></label>

<nav >
    
    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="global.html#Graph">Graph</a><ul class='methods'><li data-type='method'><a href="global.html#Graph#_getAncestors">_getAncestors</a></li><li data-type='method'><a href="global.html#Graph#_toEdge">_toEdge</a></li><li data-type='method'><a href="global.html#Graph#_toNode">_toNode</a></li><li data-type='method'><a href="global.html#Graph#_toSubsumedEdge">_toSubsumedEdge</a></li><li data-type='method'><a href="global.html#Graph#addGraphLibNode">addGraphLibNode</a></li><li data-type='method'><a href="global.html#Graph#addSubsumedEdge">addSubsumedEdge</a></li><li data-type='method'><a href="global.html#Graph#ancestors">ancestors</a></li><li data-type='method'><a href="global.html#Graph#getEdges">getEdges</a></li><li data-type='method'><a href="global.html#Graph#node">node</a></li><li data-type='method'><a href="global.html#Graph#targetEdges">targetEdges</a></li><li data-type='method'><a href="global.html#Graph#~debounce">debounce</a></li><li data-type='method'><a href="global.html#Graph#~onClose">onClose</a></li><li data-type='method'><a href="global.html#Graph#~onRezie">onRezie</a></li></ul></li></ul><h3>Global</h3><ul><li><a href="global.html#App">App</a></li><li><a href="global.html#checkIndex">checkIndex</a></li><li><a href="global.html#checkShowAllNodes">checkShowAllNodes</a></li><li><a href="global.html#colorToHex">colorToHex</a></li><li><a href="global.html#ContextMenu">ContextMenu</a></li><li><a href="global.html#CrossIcon">CrossIcon</a></li><li><a href="global.html#deleteOptionsInfo">deleteOptionsInfo</a></li><li><a href="global.html#displayNewGraph">displayNewGraph</a></li><li><a href="global.html#dot_str">dot_str</a></li><li><a href="global.html#drawArrow">drawArrow</a></li><li><a href="global.html#drawHover">drawHover</a></li><li><a href="global.html#drawNode">drawNode</a></li><li><a href="global.html#Dropzone">Dropzone</a></li><li><a href="global.html#getD3Hierachy">getD3Hierachy</a></li><li><a href="global.html#getGraphNoSubsumed">getGraphNoSubsumed</a></li><li><a href="global.html#GraphSplit">GraphSplit</a></li><li><a href="global.html#hideContextMenu">hideContextMenu</a></li><li><a href="global.html#initGraph">initGraph</a></li><li><a href="global.html#initialState">initialState</a></li><li><a href="global.html#initNodeGraphics">initNodeGraphics</a></li><li><a href="global.html#initPIXI">initPIXI</a></li><li><a href="global.html#Main">Main</a></li><li><a href="global.html#MoreVerticalIcon">MoreVerticalIcon</a></li><li><a href="global.html#onBackgroundClick">onBackgroundClick</a></li><li><a href="global.html#onHover">onHover</a></li><li><a href="global.html#onNodeClick">onNodeClick</a></li><li><a href="global.html#onOut">onOut</a></li><li><a href="global.html#onTicked">onTicked</a></li><li><a href="global.html#OptionalGraph">OptionalGraph</a></li><li><a href="global.html#setEmptySelection">setEmptySelection</a></li><li><a href="global.html#setGraph">setGraph</a></li><li><a href="global.html#TopAppBar">TopAppBar</a></li><li><a href="global.html#useD3">useD3</a></li></ul>
</nav>

<div id="main">
    
    <h1 class="page-title">Graph</h1>
    

    




<section>

<header>
    
        <h2>
        Graph
        </h2>
        
            <div class="class-description usertext">The graph class that is used to draw the graph.</div>
        
    
</header>

<article>
    
        <div class="container-overview">
        
            

    
    <h2>Constructor</h2>
    

    <h4 class="name" id="Graph"><span class="type-signature"></span>new Graph<span class="signature">(root, nodes, edges)</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line28">line 28</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Creates a graph.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>root</code></td>
            

            <td class="type">
            
                
<span class="param-type">HierarchyPointNode.&lt;HierarchyGraph></span>


            
            </td>

            

            

            <td class="description last">The d3 representation of the graph.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>nodes</code></td>
            

            <td class="type">
            
                
<span class="param-type">GraphType</span>


            
            </td>

            

            

            <td class="description last">The graphlib reprensentation of the graph.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>edges</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;EdgeType></span>


            
            </td>

            

            

            <td class="description last">An array of edges in graphlib representation.</td>
        </tr>

    
    </tbody>
</table>



















        
        </div>
    

    

    

    
    
    

     

    

    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    <h4 class="name" id="_getAncestors"><span class="type-signature"></span>_getAncestors<span class="signature">(node, parents)</span><span class="type-signature"> &rarr; {Array.&lt;Node>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line230">line 230</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Look for the ancestors of the node.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">Node</span>


            
            </td>

            

            

            <td class="description last">The node we seek the parets of.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parents</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Node></span>


            
            </td>

            

            

            <td class="description last">The parents we already know.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    An array of the ancestors of the node.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Array.&lt;Node></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="_toEdge"><span class="type-signature"></span>_toEdge<span class="signature">(edge)</span><span class="type-signature"> &rarr; {Edge|undefined}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line119">line 119</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Create a graph edge from basic edge type.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>edge</code></td>
            

            <td class="type">
            
                
<span class="param-type">EdgeType</span>


            
            </td>

            

            

            <td class="description last">The edge to be transformed</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The transformed edge.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Edge</span>
|

<span class="param-type">undefined</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="_toNode"><span class="type-signature"></span>_toNode<span class="signature">(node)</span><span class="type-signature"> &rarr; {Node}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line91">line 91</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Create a graph node from a hierarchy node.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">HierarchyPointNode.&lt;HierarchyGraph></span>


            
            </td>

            

            

            <td class="description last">The hierarchy node that needs to be transformed</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The transformed node.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Node</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="_toSubsumedEdge"><span class="type-signature"></span>_toSubsumedEdge<span class="signature">(edge, data)</span><span class="type-signature"> &rarr; {Edge}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line170">line 170</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Create a graph edge that is subsumed.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>edge</code></td>
            

            <td class="type">
            
                
<span class="param-type">EdgeType</span>


            
            </td>

            

            

            <td class="description last">The basic edge to be transformed.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>data</code></td>
            

            <td class="type">
            
                
<span class="param-type">CubcicleEdge</span>


            
            </td>

            

            

            <td class="description last">The data of the edge to be transformed.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    A new graph edge that is subsuned, with all the data.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Edge</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="addGraphLibNode"><span class="type-signature"></span>addGraphLibNode<span class="signature">(node)</span><span class="type-signature"> &rarr; {Node|undefined}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line200">line 200</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Adds a node that is contained in the original graph.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The name of the node to be added.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The new node if it can be added
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Node</span>
|

<span class="param-type">undefined</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="addSubsumedEdge"><span class="type-signature"></span>addSubsumedEdge<span class="signature">(edge)</span><span class="type-signature"> &rarr; {Edge}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line275">line 275</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Add a subsumed edge to the graph.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>edge</code></td>
            

            <td class="type">
            
            </td>

            

            

            <td class="description last">A tuple containing the original graph edge and the edge data.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The subsumed edge represented in our custom format.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Edge</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="ancestors"><span class="type-signature"></span>ancestors<span class="signature">(node)</span><span class="type-signature"> &rarr; {Array.&lt;Node>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line248">line 248</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Get the ancestors of the node.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>node</code></td>
            

            <td class="type">
            
                
<span class="param-type">Node</span>


            
            </td>

            

            

            <td class="description last">The node we want to have the ancestors of.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    An array of nodes that are ancestors of the node or an emptay array if the node
   does not have any ancestors.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Array.&lt;Node></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="getEdges"><span class="type-signature"></span>getEdges<span class="signature">(edges)</span><span class="type-signature"> &rarr; {Array.&lt;Edge>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line287">line 287</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Return an array of edges from the selectionState type format to the graph edge type
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>edges</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;StoreEdge></span>


            
            </td>

            

            

            <td class="description last">The edeges we are looking to get back.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    An array of edges or an empty array if no edge are in the graph.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Array.&lt;Edge></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="node"><span class="type-signature"></span>node<span class="signature">(n)</span><span class="type-signature"> &rarr; {Node|null}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line188">line 188</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Look for the node named n in the graph.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>n</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">The name of the node we are looking for.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    null if the node is not part of the graph, the node itself otherwise.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Node</span>
|

<span class="param-type">null</span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="targetEdges"><span class="type-signature"></span>targetEdges<span class="signature">(nodes)</span><span class="type-signature"> &rarr; {Array.&lt;Edge>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="common_graphs.ts.html">common/graphs.ts</a>, <a href="common_graphs.ts.html#line259">line 259</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Get the edges that targets the nodes.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>nodes</code></td>
            

            <td class="type">
            
                
<span class="param-type">Array.&lt;Nodes></span>


            
            </td>

            

            

            <td class="description last">The nodes we want the edges that target them.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    An array of edges or an empty array if none of the nodes in argument are
   targeted by any edges.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">Array.&lt;Edge></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="~debounce"><span class="type-signature">(inner) </span>debounce<span class="signature">(func, timer<span class="signature-attributes">opt</span>)</span><span class="type-signature"> &rarr; {<a href="global.html#debouncedCallabck">debouncedCallabck</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="components_Graph_index.tsx.html">components/Graph/index.tsx</a>, <a href="components_Graph_index.tsx.html#line80">line 80</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    This debounce a function according to the timing between 2 similar events. This allows
to avoid calling to often an event handler that does heavy calculation.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        
        <th>Attributes</th>
        

        
        <th>Default</th>
        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>func</code></td>
            

            <td class="type">
            
                
<span class="param-type">CallableFunction</span>


            
            </td>

            
                <td class="attributes">
                

                

                
                </td>
            

            
                <td class="default">
                
                </td>
            

            <td class="description last">The function we wish to debounce.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>timer</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            
                <td class="attributes">
                
                    &lt;optional><br>
                

                

                
                </td>
            

            
                <td class="default">
                
                    <code>1000</code>
                
                </td>
            

            <td class="description last">The timeout befaore the function can be called again.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The debounced event handler.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#debouncedCallabck">debouncedCallabck</a></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="~onClose"><span class="type-signature">(inner) </span>onClose<span class="signature">(index)</span><span class="type-signature"> &rarr; {<a href="global.html#onSplitCloseCallback">onSplitCloseCallback</a>}</span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="components_Graph_index.tsx.html">components/Graph/index.tsx</a>, <a href="components_Graph_index.tsx.html#line103">line 103</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    Split close handler.
</div>











    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>index</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">The index of the closed split.</td>
        </tr>

    
    </tbody>
</table>
















<h5>Returns:</h5>

        
<div class="param-desc">
    The event handle for the split of index index.
</div>



<dl class="param-type">
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="global.html#onSplitCloseCallback">onSplitCloseCallback</a></span>


    </dd>
</dl>

    



        
            

    

    <h4 class="name" id="~onRezie"><span class="type-signature">(inner) </span>onRezie<span class="signature">()</span><span class="type-signature"></span></h4>

    




<dl class="details">

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="components_Graph_index.tsx.html">components/Graph/index.tsx</a>, <a href="components_Graph_index.tsx.html#line64">line 64</a>
    </li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
</dl>





<div class="description usertext">
    On resize callback.
</div>




























        
    

    

    
</article>

</section>




    
    
</div>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.6.7</a> on Mon Jul 19 2021 17:16:25 GMT+0200 (Central European Summer Time) using the <a href="https://github.com/clenemt/docdash">docdash</a> theme.
</footer>

<script>prettyPrint();</script>
<script src="scripts/polyfill.js"></script>
<script src="scripts/linenumber.js"></script>



</body>
</html>